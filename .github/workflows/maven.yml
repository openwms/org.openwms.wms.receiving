# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
  PUSHKEY: ${{ secrets.PUSHKEY }}

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build
        run: >
            mvnw clean package
            -DsurefireArgs=-Dspring.profiles.active=TEST
            -Dci.buildNumber=$GITHUB_RUN_NUMBER
            -U -B $MAVEN_OPTS
      - name: Build Image
        run: ./scripts/docker_build
      - name: IT | Run
        run: docker-compose -f .github/workflows/docker/site/docker-compose.yml build && docker-compose -f .github/workflows/docker/site/docker-compose.yml up -d
      - name: IT | Logs
        run: docker-compose -f .github/workflows/docker/site/docker-compose.yml logs -f backend
      - name: IT | Stop
        run: docker-compose -f .github/workflows/docker/site/docker-compose.yml down
      - name: Sonar | Run
        run: docker-compose -f .github/workflows/docker/sonar/docker-compose.yml up -d
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Sonar | Logs
        run: docker-compose -f .github/workflows/docker/sonar/docker-compose.yml logs -f backend
      - name: Sonar | Stop
        run: docker-compose -f .github/workflows/docker/sonar/docker-compose.yml down
      - name: Upload Image
        run: ./scripts/docker_push
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
